&led_strip {
    chain-length = <0>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};
#include <behaviors.dtsi>
#include <behaviors/mouse_key_press.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <behaviors/mouse_scroll.dtsi>

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/output.h>

#define TAPPING_TERM 200

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */
    };

    combos {
        compatible = "zmk,combos";

        ESC_ {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        TAB_ {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        CAPS_ {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 20>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        noundo {
            bindings = <&kp LC(Y)>;
            key-positions = <20 21 22>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        aspas {
            bindings = <&kp SQT>;
            key-positions = <18 19>;
        };

        tio {
            bindings = <&kp TILDE>;
            key-positions = <17 18>;
        };

        interrogacao {
            bindings = <&kp QUESTION>;
            key-positions = <28 29>;
        };
    };

    macros {
        teste: teste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(M) &kp A &kp I &kp O &kp AT &kp N3 &kp N2 &kp N6 &kp N1 &kp N5 &kp N9 &kp N4 &kp N8 &kp N7 &kp P &kp O &kp R &kp R &kp A &kp SPACE &kp N0 &kp N2>;
            label = "TESTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
  &kp Q  &kp W  &kp E  &kp R        &kp T                  &kp Y              &kp U                       &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F        &kp G                  &kp H              &kp J                       &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C  &kp V        &kp B                  &kp N              &kp M                       &kp COMMA  &kp DOT  &kp FSLH
                &kp N  &lt 2 SPACE  &mt LEFT_GUI LSHIFT    &mt LA(TAB) ENTER  &mt LEFT_CONTROL BACKSPACE  &mo 1
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
  &kp N1  &kp N2          &kp N3          &kp N4           &kp N5              &kp N6  &kp N7    &kp N8    &kp N9     &kp N0
  &none   &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &mwh SCROLL_UP      &none   &kp HOME  &kp UP    &kp END    &kp PG_UP
  &none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mwh SCROLL_DOWN    &teste  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN
                          &mo 3           &trans           &trans              &trans  &trans    &trans
            >;
        };

        symbols_layer {
            label = "SYMBOL";
            bindings = <
  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET      &kp AMPS   &kp STAR          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &kp F1    &kp F2  &kp F3    &kp F4      &kp F5         &kp MINUS      &kp EQUAL  &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp BSLH
  &kp F6    &kp F7  &kp F8    &kp F9      &kp F10        &kp UNDER      &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp PIPE
                    &mo 2     &trans      &trans         &kp LG(RIGHT)  &trans     &trans
            >;
        };

        Advanced {
            label = "adv";
            bindings = <
  &trans   &kp F1   &kp F2    &kp F3      &kp F4        &kp F5        &kp F6        &kp F7        &kp F8                &kp F9
  &kp F10  &kp F12  &kp K_PP  &kp K_PREV  &kp K_NEXT    &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
  &trans   &trans   &trans    &trans      &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4
                    &trans    &trans      &trans        &trans        &trans        &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
